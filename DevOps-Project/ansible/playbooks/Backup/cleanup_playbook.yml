---
- name: Lösche AWS VPC und EC2 Instanz
  hosts: localhost
  gather_facts: False

  tasks:
    - name: Lese random_id aus Datei
      local_action: 
        module: slurp
        src: /tmp/random_id.txt
      register: random_id_from_file

    - set_fact:
        random_id: "{{ random_id_from_file['content'] | b64decode | trim }}"

    - name: Finde EC2 Instanz basierend auf dem Namen
      amazon.aws.ec2_instance_info:
        filters:
          "tag:Name": MeinEC2_{{ random_id }}
          instance-state-name: running
        region: eu-central-1
      register: ec2_info

    - name: Stoppe EC2 Instanz
      amazon.aws.ec2_instance:
        instance_ids: "{{ ec2_info.instances[0].instance_id }}"
        state: stopped
        region: eu-central-1
      when: ec2_info.instances | length > 0

    - name: Lösche EC2 Instanz
      amazon.aws.ec2_instance:
        instance_ids: "{{ ec2_info.instances[0].instance_id }}"
        state: absent
        region: eu-central-1
      when: ec2_info.instances | length > 0

    - name: Rufe VPC Informationen ab
      amazon.aws.ec2_vpc_net_info:
        filters:
          "tag:Name": MeinVPC_{{ random_id }}
        region: eu-central-1
      register: vpc_info

    # - name: Zeige VPC Informationen
    #   debug:
    #     var: vpc_info

    # Jetzt können Sie die vpc_id aus vpc_info.vpcs[0].id verwenden:
    - name: Lösche Routing Tabelle
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc_info.vpcs[0].id }}"
        tags:
          Name: MeineRouteTable_{{ random_id }}
        state: absent
        region: eu-central-1

    - name: Lösche Security Group für EC2
      amazon.aws.ec2_group:
        name: MeinSG_{{ random_id }}
        state: absent
        region: eu-central-1

    - name: Lösche Routing Tabelle
      amazon.aws.ec2_vpc_route_table_info:
        filters:
          vpc-id: "{{ vpc_info.vpcs[0].id }}"
        region: eu-central-1
      register: rt_info

    - name: Hole Subnetz-Informationen
      amazon.aws.ec2_vpc_subnet_info:
        region: eu-central-1
        filters:
          vpc-id: "{{ vpc_info.vpcs[0].vpc_id }}"
      register: subnet_info

    - name: Lösche Subnetz mit AWS CLI
      command: 
        cmd: "aws ec2 delete-subnet --subnet-id {{ subnet_info.subnets[0].id }} --region eu-central-1"
      when: subnet_info.subnets | length > 0

    - name: Lösche Internet Gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
        region: eu-central-1
        tags:
          Name: MeinIGW_{{ random_id }}
        state: absent

    - name: Lösche VPC
      amazon.aws.ec2_vpc_net:
        name: MeinVPC_{{ random_id }}
        cidr_block: 10.0.0.0/16
        region: eu-central-1
        tags:
          Name: MeinVPC_{{ random_id }}
        state: absent

    - name: Lösche die random_id Datei
      local_action:
        module: file
        path: /tmp/random_id.txt
        state: absent
